package by.ld1995tut.Contacts;

import org.javagram.dao.*;
import org.javagram.dao.Dialog;
import org.javagram.dao.proxy.TelegramProxy;

import javax.imageio.ImageIO;
import javax.swing.*;
import java.awt.*;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;

public class ContactsForm extends JPanel implements ListCellRenderer<Person> {
    private JTextPane lastMessage;
    private JLabel nameLabel;
    private JPanel fotoPanel;
    private JPanel rootPanel;

    private TelegramProxy telegramProxy;
    private Person person;
    private boolean hasFocus;
    private BufferedImage mask;
    private BufferedImage maskOnline;

    public ContactsForm(TelegramProxy telegramProxy) {
        this.telegramProxy = telegramProxy;
        $$$setupUI$$$();
        lastMessage.setBorder(BorderFactory.createEmptyBorder());
    }

    private void createUIComponents() {
        rootPanel = this;
        fotoPanel = new JPanel() {
            @Override
            protected void paintComponent(Graphics g) {
                super.paintComponent(g);
                boolean smail = true;
                BufferedImage image;
                try {
                    image = telegramProxy.getPhoto(person, smail);
                    mask = ImageIO.read(new File("resources/images/mask-gray.png"));
                    maskOnline = ImageIO.read(new File("resources/images/mask-gray-online.png"));
                } catch (IOException e) {
                    e.printStackTrace();
                    image = null;
                }

                if (image == null) {
                    try {
                        image = ImageIO.read(new File("resources/images/default-user-avatar.png"));
                    } catch (IOException e) {
                        e.printStackTrace();
                    }
                }
                BufferedImage combined = new BufferedImage(fotoPanel.getWidth(), fotoPanel.getHeight(), BufferedImage.TYPE_INT_ARGB);
                Graphics graphics = combined.getGraphics();
                graphics.drawImage(image, 0, 0, fotoPanel.getWidth(), fotoPanel.getHeight(), null);
                if (telegramProxy.isOnline(person)) {
                    //если пользователь онлайн
                    graphics.drawImage(maskOnline, 0, 0, fotoPanel.getWidth(), fotoPanel.getHeight(), null);
                } else
                    graphics.drawImage(mask, 0, 0, fotoPanel.getWidth(), fotoPanel.getHeight(), null);
                g.drawImage(combined, 0, 0, fotoPanel.getWidth(), fotoPanel.getHeight(), null);
            }
        };
    }


    @Override
    public Component getListCellRendererComponent(JList<? extends Person> jList,
                                                  Person person, int index,
                                                  boolean selected, boolean hasFocus) {
        this.person = person;
        Dialog dialog = telegramProxy.getDialog(person);
        this.nameLabel.setText(person.getFirstName() + " " + person.getLastName());
        if (dialog != null) {
            this.lastMessage.setText(dialog.getLastMessage().getText());
        } else {
            this.lastMessage.setText("");
        }

        setPreferredSize(new Dimension(0, 50));
        this.hasFocus = hasFocus;
        return this;
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        createUIComponents();
        rootPanel.setLayout(new GridBagLayout());
        rootPanel.setForeground(new Color(-1644826));
        rootPanel.setMinimumSize(new Dimension(250, 60));
        rootPanel.setOpaque(true);
        rootPanel.setPreferredSize(new Dimension(250, 50));
        fotoPanel.setMinimumSize(new Dimension(41, 41));
        fotoPanel.setOpaque(false);
        fotoPanel.setPreferredSize(new Dimension(41, 41));
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.gridheight = 2;
        gbc.weightx = 0.1;
        gbc.weighty = 0.5;
        rootPanel.add(fotoPanel, gbc);
        nameLabel = new JLabel();
        nameLabel.setFont(new Font("Open Sans Semibold", nameLabel.getFont().getStyle(), 14));
        nameLabel.setMinimumSize(new Dimension(150, 24));
        nameLabel.setOpaque(true);
        nameLabel.setPreferredSize(new Dimension(150, 24));
        nameLabel.setText("Label");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.weightx = 0.1;
        gbc.weighty = 0.1;
        gbc.anchor = GridBagConstraints.WEST;
        rootPanel.add(nameLabel, gbc);
        lastMessage = new JTextPane();
        lastMessage.setOpaque(true);
        lastMessage.setPreferredSize(new Dimension(150, 25));
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 1;
        gbc.weighty = 0.1;
        gbc.anchor = GridBagConstraints.WEST;
        rootPanel.add(lastMessage, gbc);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return rootPanel;
    }
}
